---
- hosts: blackflag
  become: true
  vars_files:
    - creds.yml
  tasks:
    - name: update the system
      apt:
        name: "*"
        state: latest
        
    - name: restart system to reboot to newest kernel
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0

    - name: wait for 10 seconds
      pause:
        seconds: 10

    - name: wait for the system to reboot
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 120
    
    - name: install nordvpn client package
      apt:
        deb: https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb
        

    - name: update repo cache
      apt:
        update_cache: yes

    - name: Install base system req packages 
      become: true
      apt:
        state: present
        name:
         - apt-transport-https 
         - ca-certificates 
         - curl 
         - gnupg-agent 
         - software-properties-common
         - python3-pip
         - docker.io
         - nordvpn
        #  - firewalld
        #  - iptables

    - name: Install Docker Module for Python
      pip:
        name: 
         - docker
         - docker-compose

    # - name: Disable and stop ufw
    #   service: 
    #     name: ufw
    #     enabled: no
    #     state: stopped

    - name: Enable and start docker
      service: 
        name: docker
        enabled: yes
        state: started
    
    - name: Create a new primary partition with a size of 2TB
      parted:
        device: /dev/sda
        number: 3
        state: present
        part_start: 50GB
        part_end: 2TB
    
    - name: Create a ext4 filesystem on /dev/sda3
      filesystem:
        fstype: ext4
        dev: /dev/sda3
    
    - name: Mount sda3 fs 
      mount:
        path: /Drive
        src: /dev/sda3
        fstype: ext4
        state: present
    
    - name: Recursively change owner and premissions of storage
      file:
        path: /Drive
        state: directory
        recurse: yes
        owner: falcon
        group: falcon
        mode: u+rwx,g+rwx,o+rwx
    
    - name: Create symbolic link 
      file:
        src: /Drive
        dest: /home/falcon/media
        state: link

    - name: run the mediaservers docker-compose.yml
      docker_compose:
        project_name: media-server
        definition:
          version: "3"
          services:
            transmission:
              image: haugene/transmission-openvpn
              container_name: transmission-openvpn
              restart: always
              privileged: true
              ports:
                - "9091:9091"
              networks:
                - plexnet
              environment:
                - CREATE_TUN_DEVICE=true
                - OPENVPN_PROVIDER=NORDVPN
                - NORDVPN_COUNTRY=nl
                #- OPENVPN_CONFIG=nl601.nordvpn.com
                - OPENVPN_USERNAME=user
                - OPENVPN_PASSWORD=pass
                - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --mssfix 1640
                - WEBPROXY_ENABLED=false
                - LOCAL_NETWORK=10.0.0.249/24
                - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
                - TRANSMISSION_RPC_PASSWORD=me
                - TRANSMISSION_RPC_USERNAME=me
                - TRANSMISSION_UMASK=2
                - TRANSMISSION_RATIO_LIMIT=1.00
                - TRANSMISSION_RATIO_LIMIT_ENABLED=false
              cap_add:
                - NET_ADMIN
              logging:
                driver: json-file
                options:
                  max-size: 10m
              volumes:
                - /Drive/falcon/downloads:/data
                - /etc/localtime:/etc/localtime:ro
                - /Drive/falcon/transmission/config:/config
                - /Drive/falcon/transmission/watch:/watch
              dns:
                - 8.8.8.8
                - 8.8.4.4
              restart: unless-stopped     
            radarr:
              image: linuxserver/radarr
              container_name: radarr
              restart: always
              ports:
                - "7878:7878"
              networks:
                - plexnet
              environment:
                - PGID=1000
                - PUID=1000
                - TZ=America/New_York
              volumes:
                - /Drive/falcon/downloads:/home/downloads
                - /Drive/falcon/videos:/home/movies
                - /Drive/falcon/radarr:/home/config
                - /Drive/falcon/transmission/completed:/downloads
              restart: unless-stopped
            sonarr:
              image: linuxserver/sonarr
              container_name: sonarr
              restart: always
              ports:
                - "8989:8989"
              networks:
                - plexnet
              environment:
                - PGID=1000
                - PUID=1000
                - TZ=America/New_York
              volumes:
                - /Drive/falcon/downloads:/home/downloads
                - /Drive/falcon/videos:/home/videos
                - /Drive/falcon/sonarr-config:/sonarr/config
                #- ${MOUNT_POINT}/transmission:/data
              restart: unless-stopped
            jackett:
              image: linuxserver/jackett
              container_name: jackett
              restart: always
              networks:
                - plexnet
              environment:
                - PGID=1000
                - PUID=1000
                - TZ=America/New_York
              volumes:
                - /home/falcon/jackett-config:/config
                - /home/falcon/jacket-downloads:/downloads
              ports:
                - "9117:9117"
              restart: unless-stopped   
            # emby: I switched to plex on seperate compute node
            #   image: emby/embyserver
            #   environment:
            #     - UID=1000
            #     - GID=100
            #     - GIDLIST=100,44
            #   devices:
            #     - /dev/dri/renderD128
            #   volumes:
            #     - ${MOUNT_POINT}/emby/config:/config
            #     - ${MOUNT_POINT}/media/movies:/movies
            #     - ${MOUNT_POINT}/media/tv:/tv
            #   ports:
            #     - 8096:8096
            #     - 8920:8920
            #   restart: unless-stopped
            # bazarr: switched to plex (plex subtitle api thing)
            #   build: docker-bazarr
            #   container_name: bazarr
            #   environment:
            #     - PUID=1001
            #     - PGID=1001
            #     - TZ=America/New_York
            #   volumes:
            #     - ${MOUNT_POINT}/bazarr/config:/config
            #     - ${MOUNT_POINT}/media/movies:/movies
            #     - ${MOUNT_POINT}/media/tv:/tv
            #   ports:
            #     - 6767:6767
            #   deploy:
            #     resources:
            #       limits:
            #         memory: 4096M
            #   restart: unless-stopped
          networks:
            plexnet:
              driver: bridge
